quit
Place.all.size
Place.all.count
Place.all
Place.select(:id).count
Place.all.count
Place.allcount
Place.count
quit
c
availability
quit
Chronic.parse(hours.first)
hours = place.hours['thursday'].flatten
place.hours[day_of_week].select{|h|range = Chronic.parse(h.first)..Chronic.parse(h.last); range === Time.now.to_i}
quit
Chronic.parse place.hours['thursday'].flatten.first
place.hours['thursday'].flatten.first
place.hours['thursday'].flatten
place.hours.values
place.hours[day_of_week].select{|h|range = h.first..h.last; range === Time.now.to_i}
place.hours['thursday']
place.hours
place
c
hour.map{|hr|hr.join(' - ')}.join(', ')
hour.map{|hr|hr.join(' - ')}
hour
hour.join(0, " - ")
hour.join("- ")
hour.join("; ")
hour.join
hour[0].class
hour[1].class
hour[1]
hour[0]
hour.join(" , ")
hour.count
hour.join(" - ")
hour.join("; ")
hour.join
hour.class
hour.join('; ')
hour
quit
c
hour.count
hour.class
hour
day
c
n
quit
Place.first.hours[day_of_week]
Place.first.hours.class
Place.available(day_of_week).to_sql
quit
c
place.hours
hour
c
params[:order]
item
item[1]
columns
c
n
params[:order].first
params[:order]
n
c
columns
quit
row
quit
row['hours'].each{|k,v|k: v}
row['hours'].each{|k, v|k: v}
row['hours'].each{|k, v| k: v }
row['hours'].map{|k, v| k: v }
row['hours'].map{|k, v| puts v }
row['hours'].map{|k, v| puts k }
row['hours'].map{|k, v| :k => v }
row['hours']
row['hours'].map{|k, v| k: v }
row['hours'].map{|k, v| k => v }
row['category_labels'].flatten.uniq
row['category_labels'].flatten
row['hours'].keys
row['hours']
row
quit
row['name']
row
quit
factual.table('places-us').search('tallahassee fl').rows
factual.table('places-us').search('tallahassee fl')
n
quit
YAML.load(ERB.new(raw_config).result)[Rails.env]
YAML.load(ERB.new(raw_config).result)
ERB.new(raw_config).result
YAML.load(ERB.new(raw_config).result
c
APP_CONFIG
APP
quit
APP
n
quit
APP
c
n
quit
ENV[:factual]
ENV
APP
